// automatically generated by the FlatBuffers compiler, do not modify

import { ClientLoginResponse } from '../wsschema/client-login-response.js';
import { JsonToBinaryRequest } from '../wsschema/json-to-binary-request.js';
import { JsonToBinaryResponse } from '../wsschema/json-to-binary-response.js';
import { MediaPlaneLoginRequest } from '../wsschema/media-plane-login-request.js';
import { MobileToMediaPlaneLoginRequest } from '../wsschema/mobile-to-media-plane-login-request.js';
import { MobileToMediaPlaneLogoutRequest } from '../wsschema/mobile-to-media-plane-logout-request.js';
import { PhaseResponse } from '../wsschema/phase-response.js';
import { PingMediaPlaneRequest } from '../wsschema/ping-media-plane-request.js';
import { PingMediaPlaneResponse } from '../wsschema/ping-media-plane-response.js';
import { PingMediaPlaneUnreliableRequest } from '../wsschema/ping-media-plane-unreliable-request.js';
import { PingMediaPlaneUnreliableResponse } from '../wsschema/ping-media-plane-unreliable-response.js';
import { PingServerRequest } from '../wsschema/ping-server-request.js';
import { PingServerResponse } from '../wsschema/ping-server-response.js';
import { PingServerUnreliableRequest } from '../wsschema/ping-server-unreliable-request.js';
import { PingServerUnreliableResponse } from '../wsschema/ping-server-unreliable-response.js';
import { PlayerNameRequest } from '../wsschema/player-name-request.js';
import { PlayerNameResponse } from '../wsschema/player-name-response.js';
import { RepeaterBinaryResponse } from '../wsschema/repeater-binary-response.js';
import { RepeaterBroadcastBinaryResponse } from '../wsschema/repeater-broadcast-binary-response.js';
import { RepeaterLoginRequest } from '../wsschema/repeater-login-request.js';
import { ShapeRequest } from '../wsschema/shape-request.js';
import { ShapeResponse } from '../wsschema/shape-response.js';
import { WebClientLoginRequest } from '../wsschema/web-client-login-request.js';
import { WebClientLoginResponse } from '../wsschema/web-client-login-response.js';
import { WebClientLogoutRequest } from '../wsschema/web-client-logout-request.js';


export enum Message {
  NONE = 0,
  PingServerRequest = 1,
  PingServerResponse = 2,
  PingServerUnreliableRequest = 3,
  PingServerUnreliableResponse = 4,
  PingMediaPlaneRequest = 5,
  PingMediaPlaneResponse = 6,
  PingMediaPlaneUnreliableRequest = 7,
  PingMediaPlaneUnreliableResponse = 8,
  ClientLoginResponse = 9,
  MediaPlaneLoginRequest = 10,
  MobileToMediaPlaneLoginRequest = 11,
  MobileToMediaPlaneLogoutRequest = 12,
  JsonToBinaryRequest = 13,
  JsonToBinaryResponse = 14,
  RepeaterLoginRequest = 15,
  WebClientLoginRequest = 16,
  WebClientLoginResponse = 17,
  WebClientLogoutRequest = 18,
  RepeaterBinaryResponse = 19,
  RepeaterBroadcastBinaryResponse = 20,
  ShapeRequest = 21,
  ShapeResponse = 22,
  PlayerNameRequest = 23,
  PlayerNameResponse = 24,
  PhaseResponse = 25
}

export function unionToMessage(
  type: Message,
  accessor: (obj:ClientLoginResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PhaseResponse|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|PlayerNameRequest|PlayerNameResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|WebClientLogoutRequest) => ClientLoginResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PhaseResponse|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|PlayerNameRequest|PlayerNameResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|WebClientLogoutRequest|null
): ClientLoginResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PhaseResponse|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|PlayerNameRequest|PlayerNameResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|WebClientLogoutRequest|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'PingServerRequest': return accessor(new PingServerRequest())! as PingServerRequest;
    case 'PingServerResponse': return accessor(new PingServerResponse())! as PingServerResponse;
    case 'PingServerUnreliableRequest': return accessor(new PingServerUnreliableRequest())! as PingServerUnreliableRequest;
    case 'PingServerUnreliableResponse': return accessor(new PingServerUnreliableResponse())! as PingServerUnreliableResponse;
    case 'PingMediaPlaneRequest': return accessor(new PingMediaPlaneRequest())! as PingMediaPlaneRequest;
    case 'PingMediaPlaneResponse': return accessor(new PingMediaPlaneResponse())! as PingMediaPlaneResponse;
    case 'PingMediaPlaneUnreliableRequest': return accessor(new PingMediaPlaneUnreliableRequest())! as PingMediaPlaneUnreliableRequest;
    case 'PingMediaPlaneUnreliableResponse': return accessor(new PingMediaPlaneUnreliableResponse())! as PingMediaPlaneUnreliableResponse;
    case 'ClientLoginResponse': return accessor(new ClientLoginResponse())! as ClientLoginResponse;
    case 'MediaPlaneLoginRequest': return accessor(new MediaPlaneLoginRequest())! as MediaPlaneLoginRequest;
    case 'MobileToMediaPlaneLoginRequest': return accessor(new MobileToMediaPlaneLoginRequest())! as MobileToMediaPlaneLoginRequest;
    case 'MobileToMediaPlaneLogoutRequest': return accessor(new MobileToMediaPlaneLogoutRequest())! as MobileToMediaPlaneLogoutRequest;
    case 'JsonToBinaryRequest': return accessor(new JsonToBinaryRequest())! as JsonToBinaryRequest;
    case 'JsonToBinaryResponse': return accessor(new JsonToBinaryResponse())! as JsonToBinaryResponse;
    case 'RepeaterLoginRequest': return accessor(new RepeaterLoginRequest())! as RepeaterLoginRequest;
    case 'WebClientLoginRequest': return accessor(new WebClientLoginRequest())! as WebClientLoginRequest;
    case 'WebClientLoginResponse': return accessor(new WebClientLoginResponse())! as WebClientLoginResponse;
    case 'WebClientLogoutRequest': return accessor(new WebClientLogoutRequest())! as WebClientLogoutRequest;
    case 'RepeaterBinaryResponse': return accessor(new RepeaterBinaryResponse())! as RepeaterBinaryResponse;
    case 'RepeaterBroadcastBinaryResponse': return accessor(new RepeaterBroadcastBinaryResponse())! as RepeaterBroadcastBinaryResponse;
    case 'ShapeRequest': return accessor(new ShapeRequest())! as ShapeRequest;
    case 'ShapeResponse': return accessor(new ShapeResponse())! as ShapeResponse;
    case 'PlayerNameRequest': return accessor(new PlayerNameRequest())! as PlayerNameRequest;
    case 'PlayerNameResponse': return accessor(new PlayerNameResponse())! as PlayerNameResponse;
    case 'PhaseResponse': return accessor(new PhaseResponse())! as PhaseResponse;
    default: return null;
  }
}

export function unionListToMessage(
  type: Message, 
  accessor: (index: number, obj:ClientLoginResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PhaseResponse|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|PlayerNameRequest|PlayerNameResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|WebClientLogoutRequest) => ClientLoginResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PhaseResponse|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|PlayerNameRequest|PlayerNameResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|WebClientLogoutRequest|null, 
  index: number
): ClientLoginResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PhaseResponse|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|PlayerNameRequest|PlayerNameResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|WebClientLogoutRequest|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'PingServerRequest': return accessor(index, new PingServerRequest())! as PingServerRequest;
    case 'PingServerResponse': return accessor(index, new PingServerResponse())! as PingServerResponse;
    case 'PingServerUnreliableRequest': return accessor(index, new PingServerUnreliableRequest())! as PingServerUnreliableRequest;
    case 'PingServerUnreliableResponse': return accessor(index, new PingServerUnreliableResponse())! as PingServerUnreliableResponse;
    case 'PingMediaPlaneRequest': return accessor(index, new PingMediaPlaneRequest())! as PingMediaPlaneRequest;
    case 'PingMediaPlaneResponse': return accessor(index, new PingMediaPlaneResponse())! as PingMediaPlaneResponse;
    case 'PingMediaPlaneUnreliableRequest': return accessor(index, new PingMediaPlaneUnreliableRequest())! as PingMediaPlaneUnreliableRequest;
    case 'PingMediaPlaneUnreliableResponse': return accessor(index, new PingMediaPlaneUnreliableResponse())! as PingMediaPlaneUnreliableResponse;
    case 'ClientLoginResponse': return accessor(index, new ClientLoginResponse())! as ClientLoginResponse;
    case 'MediaPlaneLoginRequest': return accessor(index, new MediaPlaneLoginRequest())! as MediaPlaneLoginRequest;
    case 'MobileToMediaPlaneLoginRequest': return accessor(index, new MobileToMediaPlaneLoginRequest())! as MobileToMediaPlaneLoginRequest;
    case 'MobileToMediaPlaneLogoutRequest': return accessor(index, new MobileToMediaPlaneLogoutRequest())! as MobileToMediaPlaneLogoutRequest;
    case 'JsonToBinaryRequest': return accessor(index, new JsonToBinaryRequest())! as JsonToBinaryRequest;
    case 'JsonToBinaryResponse': return accessor(index, new JsonToBinaryResponse())! as JsonToBinaryResponse;
    case 'RepeaterLoginRequest': return accessor(index, new RepeaterLoginRequest())! as RepeaterLoginRequest;
    case 'WebClientLoginRequest': return accessor(index, new WebClientLoginRequest())! as WebClientLoginRequest;
    case 'WebClientLoginResponse': return accessor(index, new WebClientLoginResponse())! as WebClientLoginResponse;
    case 'WebClientLogoutRequest': return accessor(index, new WebClientLogoutRequest())! as WebClientLogoutRequest;
    case 'RepeaterBinaryResponse': return accessor(index, new RepeaterBinaryResponse())! as RepeaterBinaryResponse;
    case 'RepeaterBroadcastBinaryResponse': return accessor(index, new RepeaterBroadcastBinaryResponse())! as RepeaterBroadcastBinaryResponse;
    case 'ShapeRequest': return accessor(index, new ShapeRequest())! as ShapeRequest;
    case 'ShapeResponse': return accessor(index, new ShapeResponse())! as ShapeResponse;
    case 'PlayerNameRequest': return accessor(index, new PlayerNameRequest())! as PlayerNameRequest;
    case 'PlayerNameResponse': return accessor(index, new PlayerNameResponse())! as PlayerNameResponse;
    case 'PhaseResponse': return accessor(index, new PhaseResponse())! as PhaseResponse;
    default: return null;
  }
}
